plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
    id 'org.springframework.boot' version '2.0.1.RELEASE'
    id "jacoco"
}

apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

apply from: "$rootDir/gradle/versioning.gradle"

group = 'jalgoarena'
description = """JAlgoArena Events"""

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jar {
    baseName = 'jalgoarena-events'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-webflux",
            "org.springframework.kafka:spring-kafka",
            "org.springframework.boot:spring-boot-starter-websocket",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.jetbrains.kotlin:kotlin-stdlib",
            "org.jetbrains.kotlin:kotlin-reflect",
            'net.logstash.logback:logstash-logback-encoder:5.1'

    testCompile 'junit:junit:4.12',
            'pl.pragmatists:JUnitParams:1.0.5',
            "org.springframework.kafka:spring-kafka-test:2.1.4.RELEASE",
            "org.springframework.boot:spring-boot-starter-test",
            'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

defaultTasks 'clean', 'bootJar'

task stage {
    dependsOn 'bootJar'
}

task releaseZip(type: Zip, dependsOn: 'bootJar') {
    from('build/libs/') {
        include('*.jar')
    }
    from 'run.sh'
    archiveName "JAlgoArena-Events-${version}.zip"
    destinationDir(file('build/libs'))
}

task buildDockerImage(type: Exec, dependsOn: 'bootJar') {
    commandLine 'docker',  'build', '-t', "jalgoarena/events:${version}", '.'
}

task pushDockerImages(type: Exec, dependsOn: 'buildDockerImage') {
    commandLine 'docker',  'push', "jalgoarena/events:${version}"
}